/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { PlasmaManager } from "./PlasmaManager";

export class PlasmaManagerFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<PlasmaManager> {
    return super.deploy(overrides || {}) as Promise<PlasmaManager>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): PlasmaManager {
    return super.attach(address) as PlasmaManager;
  }
  connect(signer: Signer): PlasmaManagerFactory {
    return super.connect(signer) as PlasmaManagerFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PlasmaManager {
    return new Contract(address, _abi, signerOrProvider) as PlasmaManager;
  }
}

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_startBlockNumber",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_bunchDepth",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_bunchIndex",
        type: "uint256",
      },
    ],
    name: "NewBunchHeader",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "getAllValidators",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_bunchIndex",
        type: "uint256",
      },
    ],
    name: "getBunchHeader",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "startBlockNumber",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "bunchDepth",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "transactionsMegaRoot",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "receiptsMegaRoot",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "lastBlockHash",
            type: "bytes32",
          },
        ],
        internalType: "struct PlasmaManager.BunchHeader",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getNextStartBlockNumber",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_validatorIndex",
        type: "uint256",
      },
    ],
    name: "getValidator",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_validator",
        type: "address",
      },
    ],
    name: "isValidator",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastBunchIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_validators",
        type: "address[]",
      },
    ],
    name: "setInitialValidators",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_startBlockNumber",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_bunchDepth",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "_txMRoot",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_rcMRoot",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_lastBlockHash",
        type: "bytes32",
      },
      {
        internalType: "bytes[]",
        name: "_sigs",
        type: "bytes[]",
      },
    ],
    name: "submitBunchHeader",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "";
