/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { PetLiquidFlattenRandomnessManager } from "./PetLiquidFlattenRandomnessManager";

export class PetLiquidFlattenRandomnessManagerFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<PetLiquidFlattenRandomnessManager> {
    return super.deploy(
      overrides || {}
    ) as Promise<PetLiquidFlattenRandomnessManager>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): PetLiquidFlattenRandomnessManager {
    return super.attach(address) as PetLiquidFlattenRandomnessManager;
  }
  connect(signer: Signer): PetLiquidFlattenRandomnessManagerFactory {
    return super.connect(signer) as PetLiquidFlattenRandomnessManagerFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PetLiquidFlattenRandomnessManager {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as PetLiquidFlattenRandomnessManager;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_numberOfBytes",
        type: "uint256",
      },
    ],
    name: "getRandomBytes",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getRandomBytes32",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061022b806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063ae6dc6fb1461003b578063f5b0fe5414610064575b600080fd5b61004e610049366004610141565b610079565b60405161005b9190610192565b60405180910390f35b61006c6100c2565b60405161005b9190610189565b60608060005b838110156100bb57816100906100c2565b6040516020016100a1929190610167565b60408051601f19818403018152919052915060010161007f565b5092915050565b6000806100cd61011a565b905060005481146100e15760008181556001555b600180548101908190556000546040516100fe9290602001610159565b6040516020818303038152906040528051906020012091505090565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff43014090565b600060208284031215610152578081fd5b5035919050565b918252602082015260400190565b600083516101798184602088016101c5565b9190910191825250602001919050565b90815260200190565b60006020825282518060208401526101b18160408501602087016101c5565b601f01601f19169190910160400192915050565b60005b838110156101e05781810151838201526020016101c8565b838111156101ef576000848401525b5050505056fea26469706673582212204c461374ad6e4ed9ee7b880e515c4d203b54fdf2f4602361defa6a7418fc977664736f6c63430007050033";
