/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { BatchSendTokens } from "./BatchSendTokens";

export class BatchSendTokensFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<BatchSendTokens> {
    return super.deploy(overrides || {}) as Promise<BatchSendTokens>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): BatchSendTokens {
    return super.attach(address) as BatchSendTokens;
  }
  connect(signer: Signer): BatchSendTokensFactory {
    return super.connect(signer) as BatchSendTokensFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BatchSendTokens {
    return new Contract(address, _abi, signerOrProvider) as BatchSendTokens;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "addressArray",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "amountArray",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "totalAmount",
        type: "uint256",
      },
    ],
    name: "sendErc20ByDifferentAmount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "addressArray",
        type: "address[]",
      },
      {
        internalType: "uint256",
        name: "amountToEachAddress",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalAmount",
        type: "uint256",
      },
    ],
    name: "sendErc20BySameAmount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "addressArray",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "amountArray",
        type: "uint256[]",
      },
    ],
    name: "sendNativeByDifferentAmount",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506107a4806100206000396000f3fe6080604052600436106100345760003560e01c8063a87a7e0114610039578063ae2fda7b1461015e578063c1e97df414610221575b600080fd5b61015c6004803603604081101561004f57600080fd5b810190602081018135600160201b81111561006957600080fd5b82018360208201111561007b57600080fd5b803590602001918460208302840111600160201b8311171561009c57600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050600160201b8111156100eb57600080fd5b8201836020820111156100fd57600080fd5b803590602001918460208302840111600160201b8311171561011e57600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550610363945050505050565b005b34801561016a57600080fd5b5061015c6004803603608081101561018157600080fd5b6001600160a01b038235169190810190604081016020820135600160201b8111156101ab57600080fd5b8201836020820111156101bd57600080fd5b803590602001918460208302840111600160201b831117156101de57600080fd5b91908080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525092955050823593505050602001356104da565b34801561022d57600080fd5b5061015c6004803603608081101561024457600080fd5b6001600160a01b038235169190810190604081016020820135600160201b81111561026e57600080fd5b82018360208201111561028057600080fd5b803590602001918460208302840111600160201b831117156102a157600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050600160201b8111156102f057600080fd5b82018360208201111561030257600080fd5b803590602001918460208302840111600160201b8311171561032357600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550509135925061060e915050565b815160005b8181101561044557600084828151811061037e57fe5b60200260200101516001600160a01b031684838151811061039b57fe5b6020908102919091010151604051600081818185875af1925050503d80600081146103e2576040519150601f19603f3d011682016040523d82523d6000602084013e6103e7565b606091505b505090508061043c576040805162461bcd60e51b815260206004820152601c60248201527b4253543a204e41544956455f5452414e534645525f4641494c494e4760201b604482015290519081900360640190fd5b50600101610368565b5047156104d557604051600090339047908381818185875af1925050503d806000811461048e576040519150601f19603f3d011682016040523d82523d6000602084013e610493565b606091505b50509050806104d35760405162461bcd60e51b815260040180806020018281038252602181526020018061074e6021913960400191505060405180910390fd5b505b505050565b604080516323b872dd60e01b81523360048201523060248201526044810183905290516001600160a01b038616916323b872dd9160648083019260209291908290030181600087803b15801561052f57600080fd5b505af1158015610543573d6000803e3d6000fd5b505050506040513d602081101561055957600080fd5b5050825160005b8181101561060657856001600160a01b031663a9059cbb86838151811061058357fe5b6020026020010151866040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050602060405180830381600087803b1580156105d257600080fd5b505af11580156105e6573d6000803e3d6000fd5b505050506040513d60208110156105fc57600080fd5b5050600101610560565b505050505050565b604080516323b872dd60e01b81523360048201523060248201526044810183905290516001600160a01b038616916323b872dd9160648083019260209291908290030181600087803b15801561066357600080fd5b505af1158015610677573d6000803e3d6000fd5b505050506040513d602081101561068d57600080fd5b5050825160005b8181101561060657856001600160a01b031663a9059cbb8683815181106106b757fe5b60200260200101518684815181106106cb57fe5b60200260200101516040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050602060405180830381600087803b15801561071957600080fd5b505af115801561072d573d6000803e3d6000fd5b505050506040513d602081101561074357600080fd5b505060010161069456fe4253543a204e41544956455f4348414e47455f52455455524e5f4641494c494e47a2646970667358221220518efe87d90969fd1b7994411cc4d836ac658d4594fd6bd1800e176da5cdaeda64736f6c63430007050033";
