/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { PetLiquidFlattenOwnable } from "./PetLiquidFlattenOwnable";

export class PetLiquidFlattenOwnableFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<PetLiquidFlattenOwnable> {
    return super.deploy(overrides || {}) as Promise<PetLiquidFlattenOwnable>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): PetLiquidFlattenOwnable {
    return super.attach(address) as PetLiquidFlattenOwnable;
  }
  connect(signer: Signer): PetLiquidFlattenOwnableFactory {
    return super.connect(signer) as PetLiquidFlattenOwnableFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PetLiquidFlattenOwnable {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as PetLiquidFlattenOwnable;
  }
}

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50600061001b61006a565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a35061006e565b3390565b6102d78061007d6000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80638da5cb5b1461003b578063f2fde38b14610059575b600080fd5b61004361006e565b6040516100509190610214565b60405180910390f35b61006c6100673660046101d9565b61008a565b005b60005473ffffffffffffffffffffffffffffffffffffffff1690565b6100926100fb565b60005473ffffffffffffffffffffffffffffffffffffffff9081169116146100ef576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100e690610235565b60405180910390fd5b6100f8816100ff565b50565b3390565b73ffffffffffffffffffffffffffffffffffffffff811661014c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100e69061026a565b6000805460405173ffffffffffffffffffffffffffffffffffffffff808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b6000602082840312156101ea578081fd5b813573ffffffffffffffffffffffffffffffffffffffff8116811461020d578182fd5b9392505050565b73ffffffffffffffffffffffffffffffffffffffff91909116815260200190565b6020808252818101527f4f776e61626c653a2043414c4c45525f49535f4e4f545f5448455f4f574e4552604082015260600190565b6020808252601f908201527f4f776e61626c653a204e45575f4f574e45525f49535f5a45524f5f414444520060408201526060019056fea2646970667358221220097e8a8269152a03003d7edc55cff661869fade1b404c22dba73e9c907f3c18364736f6c63430007050033";
