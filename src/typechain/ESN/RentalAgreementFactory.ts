/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import { Signer, BigNumberish } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import { Contract, ContractFactory, Overrides } from '@ethersproject/contracts';

import { RentalAgreement } from './RentalAgreement';

export class RentalAgreementFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _lessor: string,
    _lessee: string,
    _maxrent: BigNumberish,
    _security: BigNumberish,
    _cancellationFee: BigNumberish,
    _incentive: BigNumberish,
    _item: string,
    _status: boolean,
    _possibleRents: BigNumberish[],
    overrides?: Overrides
  ): Promise<RentalAgreement> {
    return super.deploy(
      _lessor,
      _lessee,
      _maxrent,
      _security,
      _cancellationFee,
      _incentive,
      _item,
      _status,
      _possibleRents,
      overrides || {}
    ) as Promise<RentalAgreement>;
  }
  getDeployTransaction(
    _lessor: string,
    _lessee: string,
    _maxrent: BigNumberish,
    _security: BigNumberish,
    _cancellationFee: BigNumberish,
    _incentive: BigNumberish,
    _item: string,
    _status: boolean,
    _possibleRents: BigNumberish[],
    overrides?: Overrides
  ): TransactionRequest {
    return super.getDeployTransaction(
      _lessor,
      _lessee,
      _maxrent,
      _security,
      _cancellationFee,
      _incentive,
      _item,
      _status,
      _possibleRents,
      overrides || {}
    );
  }
  attach(address: string): RentalAgreement {
    return super.attach(address) as RentalAgreement;
  }
  connect(signer: Signer): RentalAgreementFactory {
    return super.connect(signer) as RentalAgreementFactory;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): RentalAgreement {
    return new Contract(address, _abi, signerOrProvider) as RentalAgreement;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: 'address',
        name: '_lessor',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_lessee',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: '_maxrent',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_security',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_cancellationFee',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_incentive',
        type: 'uint256',
      },
      {
        internalType: 'string',
        name: '_item',
        type: 'string',
      },
      {
        internalType: 'bool',
        name: '_status',
        type: 'bool',
      },
      {
        internalType: 'uint256[]',
        name: '_possibleRents',
        type: 'uint256[]',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    anonymous: false,
    inputs: [],
    name: 'agreementConfirmed',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'enum RentalAgreement.Check',
        name: '',
        type: 'uint8',
      },
    ],
    name: 'checked',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [],
    name: 'contractTerminated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [],
    name: 'paidRent',
    type: 'event',
  },
  {
    inputs: [],
    name: 'amt',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'cancelRent',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'cancellationFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'check',
    outputs: [
      {
        internalType: 'enum RentalAgreement.Check',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'confirmAgreement',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'createdTimestamp',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint48',
        name: '_condition',
        type: 'uint48',
      },
    ],
    name: 'finalCheckByLessee',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint48',
        name: '_condition',
        type: 'uint48',
      },
    ],
    name: 'finalCheckByLessor',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getContractAddress',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getContractCreated',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getItem',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getLessee',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getLessor',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getPaidRents',
    outputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'id',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'value',
            type: 'uint256',
          },
        ],
        internalType: 'struct RentalAgreement.PaidRent[]',
        name: '',
        type: 'tuple[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getRent',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getState',
    outputs: [
      {
        internalType: 'enum RentalAgreement.State',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'incentive',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'initialCheck',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint48',
        name: '_condition',
        type: 'uint48',
      },
    ],
    name: 'initialCheckByLessee',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint48',
        name: '_condition',
        type: 'uint48',
      },
    ],
    name: 'initialCheckByLessor',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'item',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'lessee',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'lessor',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'maxRent',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    name: 'paidrents',
    outputs: [
      {
        internalType: 'uint256',
        name: 'id',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'value',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'payRent',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'payingRent',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    name: 'possibleRents',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'productManager',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'security',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'state',
    outputs: [
      {
        internalType: 'enum RentalAgreement.State',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'terminateNormally',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'additionalCharges',
        type: 'uint256',
      },
    ],
    name: 'terminateWithAdditionalCharges',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
];

const _bytecode =
  '0x60806040523480156200001157600080fd5b5060405162001d5438038062001d54833981016040819052620000349162000267565b600a80546001600160a01b03808c166001600160a01b031992831617909255600b8054928b1692909116919091179055600287905582516200007e906009906020860190620000dc565b50600486905560058590556006849055600c805460ff60a01b1916600160a01b841515021790558051620000ba90600890602084019062000161565b5050426001555050600d805460ff60901b1916905550620003c0945050505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200011f57805160ff19168380011785556200014f565b828001600101855582156200014f579182015b828111156200014f57825182559160200191906001019062000132565b506200015d9291506200019e565b5090565b8280548282559060005260206000209081019282156200014f57916020028201828111156200014f57825182559160200191906001019062000132565b5b808211156200015d57600081556001016200019f565b80516001600160a01b0381168114620001cd57600080fd5b919050565b600082601f830112620001e3578081fd5b81516001600160401b03811115620001f757fe5b6020808202620002098282016200039c565b838152935081840185830182870184018810156200022657600080fd5b600092505b848310156200024b5780518252600192909201919083019083016200022b565b505050505092915050565b80518015158114620001cd57600080fd5b60008060008060008060008060006101208a8c03121562000286578485fd5b620002918a620001b5565b98506020620002a2818c01620001b5565b985060408b0151975060608b0151965060808b0151955060a08b0151945060c08b015160018060401b0380821115620002d9578586fd5b818d0191508d601f830112620002ed578586fd5b815181811115620002fa57fe5b6200030e601f8201601f191685016200039c565b8181528f8583860101111562000322578788fd5b875b828110156200034157848101860151828201870152850162000324565b828111156200035257888684840101525b50965062000365905060e08e0162000256565b94506101008d01519250808311156200037c578384fd5b50506200038c8c828d01620001d2565b9150509295985092959850929598565b6040518181016001600160401b0381118282101715620003b857fe5b604052919050565b61198480620003d06000396000f3fe6080604052600436106101fe5760003560e01c80638e6295801161011d578063c9777fc9116100b0578063f2a4a82e1161007f578063f5a3182b11610064578063f5a3182b146104d4578063f746882c146104e9578063f7ebb864146104fc576101fe565b8063f2a4a82e146104aa578063f426306f146104bf576101fe565b8063c9777fc91461044d578063e07195641461046d578063f032ea8c14610482578063f17af517146104a2576101fe565b8063b61cdf89116100ec578063b61cdf89146103ee578063c19d93fb146103f6578063c412eaba1461040b578063c8a3752f1461042d576101fe565b80638e6295801461039c578063919840ad146103af5780639b9bedf8146103d1578063a709c4fe146103e6576101fe565b806332a2c5d0116101955780635f08a158116101645780635f08a1581461032f57806361e3a959146103445780636ef569a51461035957806374017cee1461036e576101fe565b806332a2c5d0146102e85780633bd7ba00146102fd578063548799181461030557806354dc7ccd1461031a576101fe565b80631865c57d116101d15780631865c57d1461027a5780631918629c1461029c5780631d4632ac146102be5780631e36586f146102d3576101fe565b806308e5666c14610203578063103097811461022e57806310a521261461024357806316eab96b14610265575b600080fd5b34801561020f57600080fd5b5061021861051e565b6040516102259190611937565b60405180910390f35b34801561023a57600080fd5b50610218610524565b34801561024f57600080fd5b5061026361025e3660046114b4565b61052a565b005b34801561027157600080fd5b5061021861060c565b34801561028657600080fd5b5061028f610612565b6040516102259190611551565b3480156102a857600080fd5b506102b1610622565b60405161022591906114da565b3480156102ca57600080fd5b50610218610631565b3480156102df57600080fd5b506102b1610637565b3480156102f457600080fd5b506102b1610646565b61026361064a565b34801561031157600080fd5b50610218610774565b34801561032657600080fd5b5061026361077a565b34801561033b57600080fd5b5061021861082d565b34801561035057600080fd5b506102b1610833565b34801561036557600080fd5b50610218610842565b34801561037a57600080fd5b5061038e61038936600461149c565b610848565b604051610225929190611940565b6102636103aa3660046114b4565b610873565b3480156103bb57600080fd5b506103c46109b0565b604051610225919061153d565b3480156103dd57600080fd5b506102186109c0565b6102636109c6565b610263610b6d565b34801561040257600080fd5b5061028f610cb8565b34801561041757600080fd5b50610420610cc8565b604051610225919061155f565b34801561043957600080fd5b506102636104483660046114b4565b610d5e565b34801561045957600080fd5b5061021861046836600461149c565b610e69565b34801561047957600080fd5b50610218610e87565b34801561048e57600080fd5b5061026361049d3660046114b4565b610e8d565b610263610f57565b3480156104b657600080fd5b50610420611085565b3480156104cb57600080fd5b506102b1611113565b3480156104e057600080fd5b506102b1611122565b6102636104f736600461149c565b611131565b34801561050857600080fd5b506105116112b2565b60405161022591906114ee565b60025481565b60015481565b600080600d54600160901b900460ff16600381111561054557fe5b1461054f57600080fd5b600a546001600160a01b031633146105825760405162461bcd60e51b81526004016105799061186c565b60405180910390fd5b600d80547fffffffffffffffffffffffffffffffffffffffffffffffffffff0000000000001665ffffffffffff84161790556040517f2ed540b727ef2f5f1c30389076044f81c61a5b4befbfc07ad81b0517f9e692a5906105e59060009061153d565b60405180910390a1600d80546000919060ff60981b1916600160981b835b02179055505050565b60075481565b600d54600160901b900460ff1690565b600b546001600160a01b031690565b60065481565b600b546001600160a01b031681565b3090565b600a546001600160a01b0316331461066157600080fd5b600280600d54600160901b900460ff16600381111561067c57fe5b1461068657600080fd5b600580600d54600160981b900460ff1660058111156106a157fe5b146106ab57600080fd5b6040517f1a2c2a2bbbf9d5032486504e1d9485c159203e17fe39ab8eaeea298a97ad3f6890600090a1600d546c01000000000000000000000000900465ffffffffffff1660011461070e5760405162461bcd60e51b8152600401610579906117e9565b600b546004546040516001600160a01b039092169181156108fc0291906000818181858888f1935050505015801561074a573d6000803e3d6000fd5b50600d80546003919072ff0000000000000000000000000000000000001916600160901b83610603565b60045481565b600180600d54600160901b900460ff16600381111561079557fe5b1461079f57600080fd5b600280600d54600160981b900460ff1660058111156107ba57fe5b146107c457600080fd5b600b546001600160a01b031633146107db57600080fd5b6040517fff274055432556a9f474da8c11df1d265e3bbf0e8eafad4f12bd72a9c175b4db90600090a1600d80546002919072ff0000000000000000000000000000000000001916600160901b83610603565b60035481565b600a546001600160a01b031690565b60055481565b6000818154811061085557fe5b60009182526020909120600290910201805460019091015490915082565b600080600d54600160981b900460ff16600581111561088e57fe5b1461089857600080fd5b600a546001600160a01b03163314156108c35760405162461bcd60e51b8152600401610579906118a3565b600c80547fffffffffff000000000000ffffffffffffffffffffffffffffffffffffffffff16750100000000000000000000000000000000000000000065ffffffffffff8516021790556040517f2ed540b727ef2f5f1c30389076044f81c61a5b4befbfc07ad81b0517f9e692a59061093e9060019061153d565b60405180910390a1600b80547fffffffffffffffffffffffff0000000000000000000000000000000000000000163317905560045434146109915760405162461bcd60e51b8152600401610579906116f8565b600d805460ff60981b1916600160981b1790556109ac610f57565b5050565b600d54600160981b900460ff1681565b60015490565b600b546001600160a01b031633146109dd57600080fd5b600280600d54600160901b900460ff1660038111156109f857fe5b14610a0257600080fd5b6000805b600854811015610a5c5760088181548110610a1d57fe5b9060005260206000200154341415610a54576001915060088181548110610a4057fe5b600091825260209091200154600355610a5c565b600101610a06565b5080600114610a7d5760405162461bcd60e51b815260040161057990611607565b6040517fbade71dff67ec59cb8a653f4f7a5cd050285c740376f33d8570b0639d5a6d14990600090a1600a546040516001600160a01b03909116903480156108fc02916000818181858888f19350505050158015610adf573d6000803e3d6000fd5b50600354600754610aef91611325565b60075550506040805180820190915260008054600181018084526003546020850190815290835591805291517f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563600290930292830155517f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56490910155565b6003600d54600160901b900460ff166003811115610b8757fe5b1415610ba55760405162461bcd60e51b8152600401610579906115d0565b60075415610bc55760405162461bcd60e51b81526004016105799061169b565b600b546004546040516001600160a01b039092169181156108fc0291906000818181858888f19350505050158015610c01573d6000803e3d6000fd5b506005543414610c1057600080fd5b6040517f1a2c2a2bbbf9d5032486504e1d9485c159203e17fe39ab8eaeea298a97ad3f6890600090a1600a546040516001600160a01b03909116903480156108fc02916000818181858888f19350505050158015610c72573d6000803e3d6000fd5b50600554600754610c8291611325565b600755600d805472ff00000000000000000000000000000000000019167203000000000000000000000000000000000000179055565b600d54600160901b900460ff1681565b60098054604080516020601f6002600019610100600188161502019095169490940493840181900481028201810190925282815260609390929091830182828015610d545780601f10610d2957610100808354040283529160200191610d54565b820191906000526020600020905b815481529060010190602001808311610d3757829003601f168201915b5050505050905090565b600b546001600160a01b03163314610d7557600080fd5b600280600d54600160901b900460ff166003811115610d9057fe5b14610d9a57600080fd5b600380600d54600160981b900460ff166005811115610db557fe5b14610dbf57600080fd5b600d80547fffffffffffffffffffffffffffff000000000000ffffffffffffffffffffffff166c0100000000000000000000000065ffffffffffff8616021790556040517f2ed540b727ef2f5f1c30389076044f81c61a5b4befbfc07ad81b0517f9e692a590610e319060049061153d565b60405180910390a1600d805460ff60981b1916730400000000000000000000000000000000000000179055610e64611351565b505050565b60088181548110610e7657fe5b600091825260209091200154905081565b60035490565b600a546001600160a01b03163314610ea457600080fd5b600280600d54600160901b900460ff166003811115610ebf57fe5b14610ec957600080fd5b600d80547fffffffffffffffffffffffffffffffffffffffff000000000000ffffffffffff16660100000000000065ffffffffffff8516021790556040517f2ed540b727ef2f5f1c30389076044f81c61a5b4befbfc07ad81b0517f9e692a590610f359060039061153d565b60405180910390a1600d80546003919060ff60981b1916600160981b83610603565b600080600d54600160901b900460ff166003811115610f7257fe5b14610f7c57600080fd5b600180600d54600160981b900460ff166005811115610f9757fe5b14610fa157600080fd5b600d54600c547501000000000000000000000000000000000000000000900465ffffffffffff9081169116148015610ffc5750600c547501000000000000000000000000000000000000000000900465ffffffffffff166001145b1561070e577f2ed540b727ef2f5f1c30389076044f81c61a5b4befbfc07ad81b0517f9e692a56002604051611031919061153d565b60405180910390a1600d805460ff60981b19167302000000000000000000000000000000000000001772ff0000000000000000000000000000000000001916600160901b17905561108061077a565b6109ac565b6009805460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152929183018282801561110b5780601f106110e05761010080835404028352916020019161110b565b820191906000526020600020905b8154815290600101906020018083116110ee57829003601f168201915b505050505081565b600c546001600160a01b031681565b600a546001600160a01b031681565b600a546001600160a01b0316331461114857600080fd5b600280600d54600160901b900460ff16600381111561116357fe5b1461116d57600080fd5b600580600d54600160981b900460ff16600581111561118857fe5b1461119257600080fd5b6040517f1a2c2a2bbbf9d5032486504e1d9485c159203e17fe39ab8eaeea298a97ad3f6890600090a1600d546c01000000000000000000000000900465ffffffffffff16156111f35760405162461bcd60e51b81526004016105799061172f565b6004548311156112155760405162461bcd60e51b8152600401610579906118da565b600a546040516001600160a01b039091169084156108fc029085906000818181858888f1935050505015801561124f573d6000803e3d6000fd5b506004546000906112609085611433565b600b546040519192506001600160a01b03169082156108fc029083906000818181858888f1935050505015801561129b573d6000803e3d6000fd5b506007546112a99085611325565b60075550505050565b60606000805480602002602001604051908101604052809291908181526020016000905b8282101561131c578382906000526020600020906002020160405180604001604052908160008201548152602001600182015481525050815260200190600101906112d6565b50505050905090565b60008282018381101561134a5760405162461bcd60e51b815260040161057990611664565b9392505050565b600280600d54600160901b900460ff16600381111561136c57fe5b1461137657600080fd5b600480600d54600160981b900460ff16600581111561139157fe5b1461139b57600080fd5b600d546601000000000000810465ffffffffffff9081166c0100000000000000000000000090920416146113e15760405162461bcd60e51b81526004016105799061178c565b7f2ed540b727ef2f5f1c30389076044f81c61a5b4befbfc07ad81b0517f9e692a56005604051611411919061153d565b60405180910390a1600d80546005919060ff60981b1916600160981b83610603565b600061134a83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250600081848411156114945760405162461bcd60e51b8152600401610579919061155f565b505050900390565b6000602082840312156114ad578081fd5b5035919050565b6000602082840312156114c5578081fd5b813565ffffffffffff8116811461134a578182fd5b6001600160a01b0391909116815260200190565b602080825282518282018190526000919060409081850190868401855b828110156115305781518051855286015186850152928401929085019060010161150b565b5091979650505050505050565b602081016006831061154b57fe5b91905290565b602081016004831061154b57fe5b6000602080835283518082850152825b8181101561158b5785810183015185820160400152820161156f565b8181111561159c5783604083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016929092016040019392505050565b6020808252601f908201527f596f752063616e6e6f742063616e63656c206174207468697320737461676500604082015260600190565b6020808252602d908201527f52656e742076616c756520646f65736e277420636f6d6520756e64657220617660408201527f61696c61626c652072656e747300000000000000000000000000000000000000606082015260800190565b6020808252601b908201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604082015260600190565b60208082526029908201527f596f75206861766520616c7265616479207374617274656420706179696e672060408201527f796f75722072656e740000000000000000000000000000000000000000000000606082015260800190565b60208082526016908201527f536563757269747920616d6f756e74206e656564656400000000000000000000604082015260600190565b60208082526028908201527f596f75206d757374207465726d696e6174652074686520636f6e74726163742060408201527f6e6f726d616c6c79000000000000000000000000000000000000000000000000606082015260800190565b60208082526022908201527f4469737075746520636173653a206e65656420666f72204661697468204d696e60408201527f7573000000000000000000000000000000000000000000000000000000000000606082015260800190565b6020808252604e908201527f506c65617365207465726d696e61746520636f6e7472616374207573696e672060408201527f74686520277465726d696e61746574576974684164646974696f6e616c43686160608201527f72676573272066756e6374696f6e000000000000000000000000000000000000608082015260a00190565b60208082526014908201527f4f6e6c79206c6573736f722063616e2063616c6c000000000000000000000000604082015260600190565b6020808252600a908201527f4e6f74206c657373656500000000000000000000000000000000000000000000604082015260600190565b6020808252602c908201527f596f752063616e6e6f74206368617267652070656e616c7479206d6f7265207460408201527f68616e2073656375726974790000000000000000000000000000000000000000606082015260800190565b90815260200190565b91825260208201526040019056fea2646970667358221220db073491911f23943fcc7c245da429aec2f3924e700941c7efe2b5365e69cfee64736f6c63430007020033';
