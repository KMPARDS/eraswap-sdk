/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { PetPrepaidFundsBucket } from "./PetPrepaidFundsBucket";

export class PetPrepaidFundsBucketFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _token: string,
    _deployer: string,
    overrides?: Overrides
  ): Promise<PetPrepaidFundsBucket> {
    return super.deploy(_token, _deployer, overrides || {}) as Promise<
      PetPrepaidFundsBucket
    >;
  }
  getDeployTransaction(
    _token: string,
    _deployer: string,
    overrides?: Overrides
  ): TransactionRequest {
    return super.getDeployTransaction(_token, _deployer, overrides || {});
  }
  attach(address: string): PetPrepaidFundsBucket {
    return super.attach(address) as PetPrepaidFundsBucket;
  }
  connect(signer: Signer): PetPrepaidFundsBucketFactory {
    return super.connect(signer) as PetPrepaidFundsBucketFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PetPrepaidFundsBucket {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as PetPrepaidFundsBucket;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "contract PrepaidEs",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_deployer",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_depositer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_depositAmount",
        type: "uint256",
      },
    ],
    name: "FundsDeposited",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_withdrawer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_withdrawAmount",
        type: "uint256",
      },
    ],
    name: "FundsWithdrawn",
    type: "event",
  },
  {
    inputs: [],
    name: "addFunds",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "deployer",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "petContract",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract PrepaidEs",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_withdrawEverything",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "_withdrawlAmount",
        type: "uint256",
      },
    ],
    name: "withdrawFunds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161049b38038061049b8339818101604052604081101561003357600080fd5b508051602090910151600180546001600160a01b039384166001600160a01b03199182161790915560008054939092169281169290921790556002805490911633179055610415806100866000396000f3fe60806040526004361061004e5760003560e01c80633b4d8a7d146100625780639997e13714610094578063a26759cb146100c5578063d5f39488146100cd578063fc0c546a146100e25761005d565b3661005d5761005b6100f7565b005b600080fd5b34801561006e57600080fd5b5061005b6004803603604081101561008557600080fd5b5080351515906020013561021b565b3480156100a057600080fd5b506100a96103b2565b604080516001600160a01b039092168252519081900360200190f35b61005b6100f7565b3480156100d957600080fd5b506100a96103c1565b3480156100ee57600080fd5b506100a96103d0565b6001546040805163180dd71760e11b815230600482015290516001600160a01b039092169163301bae2e913491602480830192600092919082900301818588803b15801561014457600080fd5b505af1158015610158573d6000803e3d6000fd5b50506001546002546040805163095ea7b360e01b81526001600160a01b039283166004820152346024820152905191909216945063095ea7b39350604480830193506020928290030181600087803b1580156101b357600080fd5b505af11580156101c7573d6000803e3d6000fd5b505050506040513d60208110156101dd57600080fd5b50506040805133815234602082015281517f543ba50a5eec5e6178218e364b1d0f396157b3c8fa278522c2cb7fd99407d474929181900390910190a1565b6000546001600160a01b03163314610273576040805162461bcd60e51b81526020600482015260166024820152751bdb9b1e4819195c1b1bde595c8818d85b8818d85b1b60521b604482015290519081900360640190fd5b81156102f357600154604080516370a0823160e01b815230600482015290516001600160a01b03909216916370a0823191602480820192602092909190829003018186803b1580156102c457600080fd5b505afa1580156102d8573d6000803e3d6000fd5b505050506040513d60208110156102ee57600080fd5b505190505b6001546040805163a9059cbb60e01b81523360048201526024810184905290516001600160a01b039092169163a9059cbb916044808201926020929091908290030181600087803b15801561034757600080fd5b505af115801561035b573d6000803e3d6000fd5b505050506040513d602081101561037157600080fd5b5050604080513381526020810183905281517feaff4b37086828766ad3268786972c0cd24259d4c87a80f9d3963a3c3d999b0d929181900390910190a15050565b6002546001600160a01b031681565b6000546001600160a01b031681565b6001546001600160a01b03168156fea26469706673582212204e7e72c512358f5fdb07513e3c413cf24a42a94236959a1a859c5a9bff16b09864736f6c63430007050033";
