/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import { Contract, ContractFactory, Overrides } from '@ethersproject/contracts';

import type { ReentrancyGuard } from './ReentrancyGuard';

export class ReentrancyGuardFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<ReentrancyGuard> {
    return super.deploy(overrides || {}) as Promise<ReentrancyGuard>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ReentrancyGuard {
    return super.attach(address) as ReentrancyGuard;
  }
  connect(signer: Signer): ReentrancyGuardFactory {
    return super.connect(signer) as ReentrancyGuardFactory;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): ReentrancyGuard {
    return new Contract(address, _abi, signerOrProvider) as ReentrancyGuard;
  }
}

const _abi = [
  {
    inputs: [],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
];

const _bytecode =
  '0x6080604052348015600f57600080fd5b506001600055603f8060226000396000f3fe6080604052600080fdfea2646970667358221220a766e3a2496c088a0ffe5ba80ce1cb7eaa267562db7bf819405ed672d1a7651764736f6c63430007040033';
