/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { RefundEscrow } from "./RefundEscrow";

export class RefundEscrowFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(beneficiary_: string, overrides?: Overrides): Promise<RefundEscrow> {
    return super.deploy(beneficiary_, overrides || {}) as Promise<RefundEscrow>;
  }
  getDeployTransaction(
    beneficiary_: string,
    overrides?: Overrides
  ): TransactionRequest {
    return super.getDeployTransaction(beneficiary_, overrides || {});
  }
  attach(address: string): RefundEscrow {
    return super.attach(address) as RefundEscrow;
  }
  connect(signer: Signer): RefundEscrowFactory {
    return super.connect(signer) as RefundEscrowFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RefundEscrow {
    return new Contract(address, _abi, signerOrProvider) as RefundEscrow;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address payable",
        name: "beneficiary_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "payee",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "weiAmount",
        type: "uint256",
      },
    ],
    name: "Deposited",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "RefundsClosed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "RefundsEnabled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "payee",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "weiAmount",
        type: "uint256",
      },
    ],
    name: "Withdrawn",
    type: "event",
  },
  {
    inputs: [],
    name: "beneficiary",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "beneficiaryWithdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "close",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "refundee",
        type: "address",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "payee",
        type: "address",
      },
    ],
    name: "depositsOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "enableRefunds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "state",
    outputs: [
      {
        internalType: "enum RefundEscrow.State",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "payee",
        type: "address",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "withdrawalAllowed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610d39380380610d398339818101604052602081101561003357600080fd5b5051600061003f6100fe565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3506001600160a01b0381166100ce5760405162461bcd60e51b815260040180806020018281038252602d815260200180610d0c602d913960400191505060405180910390fd5b6002805460ff196001600160a01b039390931661010002610100600160a81b031990911617919091169055610102565b3390565b610bfb806101116000396000f3fe6080604052600436106100975760003560e01c806338af3eed1461009c57806343d726d6146100cd57806351cff8d9146100e4578063685ca19414610117578063715018a61461015e5780638c52dc41146101735780638da5cb5b146101885780639af6549a1461019d578063c19d93fb146101b2578063e3a9db1a146101e8578063f2fde38b1461022d578063f340fa0114610260575b600080fd5b3480156100a857600080fd5b506100b1610286565b604080516001600160a01b039092168252519081900360200190f35b3480156100d957600080fd5b506100e261029a565b005b3480156100f057600080fd5b506100e26004803603602081101561010757600080fd5b50356001600160a01b0316610378565b34801561012357600080fd5b5061014a6004803603602081101561013a57600080fd5b50356001600160a01b03166103c8565b604080519115158252519081900360200190f35b34801561016a57600080fd5b506100e26103e4565b34801561017f57600080fd5b506100e2610474565b34801561019457600080fd5b506100b1610553565b3480156101a957600080fd5b506100e2610562565b3480156101be57600080fd5b506101c76105ef565b604051808260028111156101d757fe5b815260200191505060405180910390f35b3480156101f457600080fd5b5061021b6004803603602081101561020b57600080fd5b50356001600160a01b03166105f8565b60408051918252519081900360200190f35b34801561023957600080fd5b506100e26004803603602081101561025057600080fd5b50356001600160a01b0316610613565b6100e26004803603602081101561027657600080fd5b50356001600160a01b03166106f9565b60025461010090046001600160a01b031690565b6102a2610751565b6000546001600160a01b039081169116146102f2576040805162461bcd60e51b81526020600482018190526024820152600080516020610b54833981519152604482015290519081900360640190fd5b60006002805460ff169081111561030557fe5b146103415760405162461bcd60e51b8152600401808060200182810382526029815260200180610b2b6029913960400191505060405180910390fd5b6002805460ff1916811790556040517f088672c3a6e342f7cd94a65ba63b79df24a8973927b4d05d803c44bbf787d12f90600090a1565b610381816103c8565b6103bc5760405162461bcd60e51b8152600401808060200182810382526033815260200180610af86033913960400191505060405180910390fd5b6103c581610755565b50565b600060016002805460ff16908111156103dd57fe5b1492915050565b6103ec610751565b6000546001600160a01b0390811691161461043c576040805162461bcd60e51b81526020600482018190526024820152600080516020610b54833981519152604482015290519081900360640190fd5b600080546040516001600160a01b0390911690600080516020610b74833981519152908390a3600080546001600160a01b0319169055565b61047c610751565b6000546001600160a01b039081169116146104cc576040805162461bcd60e51b81526020600482018190526024820152600080516020610b54833981519152604482015290519081900360640190fd5b60006002805460ff16908111156104df57fe5b1461051b5760405162461bcd60e51b8152600401808060200182810382526032815260200180610b946032913960400191505060405180910390fd5b6002805460ff191660011790556040517f599d8e5a83cffb867d051598c4d70e805d59802d8081c1c7d6dffc5b6aca2b8990600090a1565b6000546001600160a01b031690565b6002805460ff168181111561057357fe5b146105af5760405162461bcd60e51b8152600401808060200182810382526038815260200180610a356038913960400191505060405180910390fd5b6002546040516001600160a01b0361010090920491909116904780156108fc02916000818181858888f193505050501580156103c5573d6000803e3d6000fd5b60025460ff1690565b6001600160a01b031660009081526001602052604090205490565b61061b610751565b6000546001600160a01b0390811691161461066b576040805162461bcd60e51b81526020600482018190526024820152600080516020610b54833981519152604482015290519081900360640190fd5b6001600160a01b0381166106b05760405162461bcd60e51b8152600401808060200182810382526026815260200180610a6d6026913960400191505060405180910390fd5b600080546040516001600160a01b0380851693921691600080516020610b7483398151915291a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b60006002805460ff169081111561070c57fe5b146107485760405162461bcd60e51b815260040180806020018281038252602b815260200180610acd602b913960400191505060405180910390fd5b6103c581610818565b3390565b61075d610751565b6000546001600160a01b039081169116146107ad576040805162461bcd60e51b81526020600482018190526024820152600080516020610b54833981519152604482015290519081900360640190fd5b6001600160a01b03811660008181526001602052604081208054919055906107d590826108eb565b6040805182815290516001600160a01b038416917f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5919081900360200190a25050565b610820610751565b6000546001600160a01b03908116911614610870576040805162461bcd60e51b81526020600482018190526024820152600080516020610b54833981519152604482015290519081900360640190fd5b6001600160a01b038116600090815260016020526040902054349061089590826109d5565b6001600160a01b038316600081815260016020908152604091829020939093558051848152905191927f2da466a7b24304f47e87fa2e1e5a81b9831ce54fec19055ce277ca2f39ba42c492918290030190a25050565b80471015610940576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e6365000000604482015290519081900360640190fd5b6040516000906001600160a01b0384169083908381818185875af1925050503d806000811461098b576040519150601f19603f3d011682016040523d82523d6000602084013e610990565b606091505b50509050806109d05760405162461bcd60e51b815260040180806020018281038252603a815260200180610a93603a913960400191505060405180910390fd5b505050565b600082820183811015610a2d576040805162461bcd60e51b815260206004820152601b60248201527a536166654d6174683a206164646974696f6e206f766572666c6f7760281b604482015290519081900360640190fd5b939250505056fe526566756e64457363726f773a2062656e65666963696172792063616e206f6e6c79207769746864726177207768696c6520636c6f7365644f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564526566756e64457363726f773a2063616e206f6e6c79206465706f736974207768696c6520616374697665436f6e646974696f6e616c457363726f773a207061796565206973206e6f7420616c6c6f77656420746f207769746864726177526566756e64457363726f773a2063616e206f6e6c7920636c6f7365207768696c65206163746976654f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65728be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0526566756e64457363726f773a2063616e206f6e6c7920656e61626c6520726566756e6473207768696c6520616374697665a264697066735822122098a27fa3159a7a47faa03c500ad881d3f47b88b353e4029bc182f55cb353e50464736f6c63430007050033526566756e64457363726f773a2062656e656669636961727920697320746865207a65726f2061646472657373";
