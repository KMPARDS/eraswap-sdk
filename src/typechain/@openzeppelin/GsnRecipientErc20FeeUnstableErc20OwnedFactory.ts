/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { GsnRecipientErc20FeeUnstableErc20Owned } from "./GsnRecipientErc20FeeUnstableErc20Owned";

export class GsnRecipientErc20FeeUnstableErc20OwnedFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    name: string,
    symbol: string,
    overrides?: Overrides
  ): Promise<GsnRecipientErc20FeeUnstableErc20Owned> {
    return super.deploy(name, symbol, overrides || {}) as Promise<
      GsnRecipientErc20FeeUnstableErc20Owned
    >;
  }
  getDeployTransaction(
    name: string,
    symbol: string,
    overrides?: Overrides
  ): TransactionRequest {
    return super.getDeployTransaction(name, symbol, overrides || {});
  }
  attach(address: string): GsnRecipientErc20FeeUnstableErc20Owned {
    return super.attach(address) as GsnRecipientErc20FeeUnstableErc20Owned;
  }
  connect(signer: Signer): GsnRecipientErc20FeeUnstableErc20OwnedFactory {
    return super.connect(
      signer
    ) as GsnRecipientErc20FeeUnstableErc20OwnedFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GsnRecipientErc20FeeUnstableErc20Owned {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as GsnRecipientErc20FeeUnstableErc20Owned;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenOwner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620011aa380380620011aa833981810160405260408110156200003757600080fd5b81019080805160405193929190846401000000008211156200005857600080fd5b9083019060208201858111156200006e57600080fd5b82516401000000008111828201881017156200008957600080fd5b82525081516020918201929091019080838360005b83811015620000b85781810151838201526020016200009e565b50505050905090810190601f168015620000e65780820380516001836020036101000a031916815260200191505b50604052602001805160405193929190846401000000008211156200010a57600080fd5b9083019060208201858111156200012057600080fd5b82516401000000008111828201881017156200013b57600080fd5b82525081516020918201929091019080838360005b838110156200016a57818101518382015260200162000150565b50505050905090810190601f168015620001985780820380516001836020036101000a031916815260200191505b50604052505082518391508290620001b89060039060208501906200024c565b508051620001ce9060049060208401906200024c565b50506005805460ff19166012179055506000620001ea62000248565b60058054610100600160a81b0319166101006001600160a01b03841690810291909117909155604051919250906000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3505050620002f8565b3390565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282620002845760008555620002cf565b82601f106200029f57805160ff1916838001178555620002cf565b82800160010185558215620002cf579182015b82811115620002cf578251825591602001919060010190620002b2565b50620002dd929150620002e1565b5090565b5b80821115620002dd5760008155600101620002e2565b610ea280620003086000396000f3fe608060405234801561001057600080fd5b50600436106100c55760003560e01c806306fdde03146100ca578063095ea7b31461014757806318160ddd1461018757806323b872dd146101a1578063313ce567146101d757806339509351146101f557806340c10f191461022157806370a082311461024f578063715018a6146102755780638da5cb5b1461027d57806395d89b41146102a1578063a457c2d7146102a9578063a9059cbb146102d5578063dd62ed3e14610301578063f2fde38b1461032f575b600080fd5b6100d2610355565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561010c5781810151838201526020016100f4565b50505050905090810190601f1680156101395780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101736004803603604081101561015d57600080fd5b506001600160a01b0381351690602001356103eb565b604080519115158252519081900360200190f35b61018f610409565b60408051918252519081900360200190f35b610173600480360360608110156101b757600080fd5b506001600160a01b0381358116916020810135909116906040013561040f565b6101df61045a565b6040805160ff9092168252519081900360200190f35b6101736004803603604081101561020b57600080fd5b506001600160a01b038135169060200135610463565b61024d6004803603604081101561023757600080fd5b506001600160a01b0381351690602001356104b6565b005b61018f6004803603602081101561026557600080fd5b50356001600160a01b0316610521565b61024d61053c565b6102856105d7565b604080516001600160a01b039092168252519081900360200190f35b6100d26105eb565b610173600480360360408110156102bf57600080fd5b506001600160a01b03813516906020013561064c565b610173600480360360408110156102eb57600080fd5b506001600160a01b0381351690602001356106b4565b61018f6004803603604081101561031757600080fd5b506001600160a01b03813581169160200135166106c8565b61024d6004803603602081101561034557600080fd5b50356001600160a01b0316610705565b60038054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103e15780601f106103b6576101008083540402835291602001916103e1565b820191906000526020600020905b8154815290600101906020018083116103c457829003601f168201915b5050505050905090565b60006103ff6103f86107fc565b8484610800565b5060015b92915050565b60025490565b60006104196105d7565b6001600160a01b0316836001600160a01b031614156104455761043d848484610836565b506001610453565b61045084848461097f565b90505b9392505050565b60055460ff1690565b60006103ff6104706107fc565b846104b185600160006104816107fc565b6001600160a01b03908116825260208083019390935260409182016000908120918c168152925290205490610a01565b610800565b6104be6107fc565b60055461010090046001600160a01b03908116911614610513576040805162461bcd60e51b81526020600482018190526024820152600080516020610d9f833981519152604482015290519081900360640190fd5b61051d8282610a59565b5050565b6001600160a01b031660009081526020819052604090205490565b6105446107fc565b60055461010090046001600160a01b03908116911614610599576040805162461bcd60e51b81526020600482018190526024820152600080516020610d9f833981519152604482015290519081900360640190fd5b60055460405160009161010090046001600160a01b031690600080516020610dbf833981519152908390a360058054610100600160a81b0319169055565b60055461010090046001600160a01b031690565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103e15780601f106103b6576101008083540402835291602001916103e1565b60006103ff6106596107fc565b846104b185604051806060016040528060258152602001610e4860259139600160006106836107fc565b6001600160a01b03908116825260208083019390935260409182016000908120918d16815292529020549190610b37565b60006103ff6106c16107fc565b8484610836565b60006106d26105d7565b6001600160a01b0316826001600160a01b031614156106f45750600019610403565b6106fe8383610bce565b9050610403565b61070d6107fc565b60055461010090046001600160a01b03908116911614610762576040805162461bcd60e51b81526020600482018190526024820152600080516020610d9f833981519152604482015290519081900360640190fd5b6001600160a01b0381166107a75760405162461bcd60e51b8152600401808060200182810382526026815260200180610d096026913960400191505060405180910390fd5b6005546040516001600160a01b038084169261010090041690600080516020610dbf83398151915290600090a3600580546001600160a01b0390921661010002610100600160a81b0319909216919091179055565b3390565b6108086105d7565b6001600160a01b0316826001600160a01b0316141561082657610831565b610831838383610bf9565b505050565b6001600160a01b03831661087b5760405162461bcd60e51b8152600401808060200182810382526025815260200180610dff6025913960400191505060405180910390fd5b6001600160a01b0382166108c05760405162461bcd60e51b8152600401808060200182810382526023815260200180610ce66023913960400191505060405180910390fd5b6108cb838383610831565b61090881604051806060016040528060268152602001610d51602691396001600160a01b0386166000908152602081905260409020549190610b37565b6001600160a01b0380851660009081526020819052604080822093909355908416815220546109379082610a01565b6001600160a01b03808416600081815260208181526040918290209490945580518581529051919392871692600080516020610ddf83398151915292918290030190a3505050565b600061098c848484610836565b6109f7846109986107fc565b6104b185604051806060016040528060288152602001610d77602891396001600160a01b038a166000908152600160205260408120906109d66107fc565b6001600160a01b031681526020810191909152604001600020549190610b37565b5060019392505050565b600082820183811015610453576040805162461bcd60e51b815260206004820152601b60248201527a536166654d6174683a206164646974696f6e206f766572666c6f7760281b604482015290519081900360640190fd5b6001600160a01b038216610ab4576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b610ac060008383610831565b600254610acd9082610a01565b6002556001600160a01b038216600090815260208190526040902054610af39082610a01565b6001600160a01b038316600081815260208181526040808320949094558351858152935192939192600080516020610ddf8339815191529281900390910190a35050565b60008184841115610bc65760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610b8b578181015183820152602001610b73565b50505050905090810190601f168015610bb85780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b038316610c3e5760405162461bcd60e51b8152600401808060200182810382526024815260200180610e246024913960400191505060405180910390fd5b6001600160a01b038216610c835760405162461bcd60e51b8152600401808060200182810382526022815260200180610d2f6022913960400191505060405180910390fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a350505056fe45524332303a207472616e7366657220746f20746865207a65726f20616464726573734f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e63654f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65728be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef45524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa2646970667358221220a29745a92d340b0f4914793e75886ac941ab3f0e82dba49e589322095ee3018d64736f6c63430007050033";
